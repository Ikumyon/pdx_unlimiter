plugins {
    id 'java'
    id 'idea'
    id 'application'
    id "org.moditect.gradleplugin" version "1.0.0-rc3"
}

group 'com.crschnick.pdx_unlimiter'
version '0.1-SNAPSHOT'
ext.moduleName = 'com.crschnick.pdx_unlimiter.app'
mainClassName = 'com.crschnick.pdx_unlimiter.app.Main'

sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenCentral()
    maven {
        url = 'http://maven.nikr.net/'
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation group: 'com.1stleg', name: 'jnativehook', version: '2.1.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "2.11.3"
    implementation files("$buildDir/generated-modules/com.realityinteractive.imageio.tga-master-SNAPSHOT.jar")
    implementation files("$buildDir/generated-modules/dds-1.0.0.jar")
    implementation files("$buildDir/generated-modules/commons-lang3-3.11.jar")
    implementation project(':eu4')
}

addDependenciesModuleInfo {
    jdepsExtraArgs = ['-q']
    outputDirectory = file("$buildDir/generated-modules")
    modules {
        module {
            artifact 'com.github.tmyroadctfig:com.realityinteractive.imageio.tga:master-SNAPSHOT'
            moduleInfoSource = '''
                module com.realityinteractive.imageio.tga {
                    requires java.se;
                    exports com.realityinteractive.imageio.tga;
                }
            '''
        }
        module {
            artifact 'net.nikr:dds:1.0.0'
            moduleInfoSource = '''
                module net.nikr.dds {
                    requires java.se;
                    exports net.nikr.dds;
                }
            '''
        }
        module {
            artifact 'org.apache.commons:commons-lang3:3.11'
            moduleInfoSource = '''
                module org.apache.commons.lang3 {
                    requires java.se;
                    exports org.apache.commons.lang3;
                    exports org.apache.commons.lang3.arch;
                }
            '''
        }
    }
}


java {
    modularity.inferModulePath = true
}

task copyModules(type: Copy) {
    into "${buildDir}/modules"
    from configurations.runtimeClasspath
}

task copyOutput(type: Copy) {
    into "${buildDir}/modules"
    from "${buildDir}/libs"
}

build.dependsOn(copyModules)
build.dependsOn(copyOutput)

createRuntimeImage {
    jdkHome = '$JAVA_HOME'
    outputDirectory = file("$buildDir/jlink-image")
    modulePath = [file("$buildDir/modules")]
    modules = ['com.crschnick.pdx_unlimiter.app']
    excludedResources = []
    launcher {
        name = 'Main'
        module = 'com.crschnick.pdx_unlimiter.app'
    }
    compression = 2
    stripDebug = true
}

createRuntimeImage.dependsOn(build)
